# GitHub Action that enables a repo to achieve gradual compliance with cpplint by
#     linting only those files that have been added or modified (vs. origin/master).
# 1. runs cpplint only on those files that have been modified vs. origin/master.
# 2. compiles with g++ only those files that have been modified vs. origin/master.
# 3. other optional filepath verifications may be commented out at the end of this file.
# From: https://github.com/cpplint/GitHub-Action-for-cpplint

name: cpplint_modified_files
on: [push, pull_request]
jobs:
  cpplint_modified_files:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v2
      - run: python -m pip install cpplint
      - run: git diff origin/main HEAD --name-only > git_diff.txt
      - name: cpplint_modified_files
        shell: python
        run: |
          import os
          import subprocess
          import sys

          print("Python {}.{}.{}".format(*sys.version_info))  # Python 3.8
          with open("git_diff.txt") as in_file:
            modified_files = sorted(in_file.read().splitlines())
          print("{} files were modified.".format(len(modified_files)))

          cpp_exts = tuple(".c .c++ .cc .cpp .cu .cuh .cxx .h .h++ .hh .hpp .hxx".split())
          cpp_files = [file for file in modified_files if file.lower().endswith(cpp_exts)]
          print(f"{len(cpp_files)} C++ files were modified.")
          if not cpp_files:
            sys.exit(0)

          print("cpplint:")
          subprocess.run(["cpplint", "--filter=-legal/copyright,+build/c++14,+build/pragma_once,-whitespace/braces,-whitespace/newline,-whitespace/parens,-runtime/indentation_namespace"] + cpp_files, check=True, text=True)
